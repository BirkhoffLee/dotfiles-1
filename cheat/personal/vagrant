# Start vm 
vagrant up

# start vm's in parallel (2 at a time)
# https://stackoverflow.com/questions/45823630/vagrant-multi-machine-parallel-start
grep config.vm.define Vagrantfile | awk '{print $4}' | tr -d "|" | xargs -P2 -I {} vagrant up {}
# for non virtualbox providers
vagrant up --parallel

# Connect to started instance
vagrant ssh

# Shutdown vm
vagrant halt

# Hibernate vm
vagrant suspend

# Set vm to initial state by cleaning all data
vagrant destroy

# destroy all VM's on the system
for i in `vagrant global-status | grep virtualbox | awk '{ print $1 }'` ; do vagrant destroy -f $i ; done

# Restart vm with new provision script
vagrant reload --provision

# List running vm's
vboxmanage list runningvms

# Delete VM (includes backing files)
vboxmanage unregistervm YourVMName --delete
vagrant destroy VMName

# List all VM's
vagrant global-status


#List all vagrant boxes available in the system including its status, and try to access the selected one via ssh
cd $(cat ~/.vagrant.d/data/machine-index/index | jq '.machines[] | {name, vagrantfile_path, state}' | \
    jq '.name + "," + .state  + "," + .vagrantfile_path'| sed 's/^"\(.*\)"$/\1/'| column -s, -t | sort -rk 2 | \
    fzf | awk '{print $3}'); 
    vagrant ssh

# Delete orphans
vagrant global-status --prune
